services:
  # frontend:
  #   platform: linux/arm64
  #   build:
  #     context: ../frontend
  #     dockerfile: ../docker/Dockerfile.frontend
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ../frontend:/usr/app:cached
  #     # - /usr/app/node_modules
  #   environment:
  #     NEXT_PUBLIC_API_HOST: ${API_HOST}
  #     API_URL: ${API_URL}
  #     NEXT_PUBLIC_API_URL: ${API_URL}
  #     NEXT_PUBLIC_SERVER_URL: ${SERVER_URL}
  #   networks:
  #     - strapi
  #     - server
  # server:
  #   platform: linux/arm64
  #   build:
  #     context: ../server
  #     dockerfile: ../docker/Dockerfile.server
  #   ports:
  #     - "4000:4000"
  #   volumes:
  #     - ../server:/usr/app:cached
  #     - /usr/app/node_modules
  #   environment:
  #     API_URL: ${API_URL}
  #   networks:
  #     - strapi
  cms:
    platform: linux/arm64
    build:
      context: ../cms
      dockerfile: ../docker/Dockerfile.cms
    ports:
      - "1337:1337"
    volumes:
      - ../cms:/usr/app
      - /usr/app/node_modules
    environment:
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: db
      DATABASE_CLIENT: postgres
      DATABASE_PORT: 5432
      DATABASE_SSL: false
      NODE_ENV: ${NODE_ENV}
    networks:
      - strapi
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:14.7
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - strapi
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
networks:
  strapi:
  server:
volumes:
  db:
